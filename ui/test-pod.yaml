apiVersion: v1
kind: Pod
metadata:
  annotations:
    checksum/extended-configuration: 5b156aa254f865ba76b2501def19aa02ba05267107f24777c0c1d93d401ede55
  creationTimestamp: "2023-03-15T18:44:07Z"
  generateName: cast-postgresql-
  labels:
    app.kubernetes.io/component: primary
    app.kubernetes.io/instance: cast
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    controller-revision-hash: cast-postgresql-6b6fcb7f8f
    helm.sh/chart: postgresql-12.1.13
    skaffold.dev/run-id: 4b608c20-ff47-470c-825e-d868d4060d43
    statefulset.kubernetes.io/pod-name: cast-postgresql-0
  name: cast-postgresql-0
  namespace: cast
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: StatefulSet
    name: cast-postgresql
    uid: 7e0f0566-3f02-49d2-af51-40a264e01eaf
  resourceVersion: "419632"
  uid: bcba34fe-0173-41a8-90be-a80e3ee1dee1
spec:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchLabels:
              app.kubernetes.io/component: primary
              app.kubernetes.io/instance: cast
              app.kubernetes.io/name: postgresql
          topologyKey: kubernetes.io/hostname
        weight: 1
  containers:
  - env:
    - name: BITNAMI_DEBUG
      value: "false"
    - name: POSTGRESQL_PORT_NUMBER
      value: "5432"
    - name: POSTGRESQL_VOLUME_DIR
      value: /bitnami/postgresql
    - name: PGDATA
      value: /bitnami/postgresql/data
    - name: POSTGRES_USER
      value: cast
    - name: POSTGRES_POSTGRES_PASSWORD
      valueFrom:
        secretKeyRef:
          key: postgres-password
          name: cast-postgresql
    - name: POSTGRES_PASSWORD
      valueFrom:
        secretKeyRef:
          key: password
          name: cast-postgresql
    - name: POSTGRES_DB
      value: cast
    - name: POSTGRESQL_ENABLE_LDAP
      value: "no"
    - name: POSTGRESQL_ENABLE_TLS
      value: "no"
    - name: POSTGRESQL_LOG_HOSTNAME
      value: "false"
    - name: POSTGRESQL_LOG_CONNECTIONS
      value: "false"
    - name: POSTGRESQL_LOG_DISCONNECTIONS
      value: "false"
    - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
      value: "off"
    - name: POSTGRESQL_CLIENT_MIN_MESSAGES
      value: error
    - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
      value: pgaudit
    image: docker.io/bitnami/postgresql:15.1.0-debian-11-r30
    imagePullPolicy: IfNotPresent
    livenessProbe:
      exec:
        command:
        - /bin/sh
        - -c
        - exec pg_isready -U "cast" -d "dbname=cast" -h 127.0.0.1 -p 5432
      failureThreshold: 6
      initialDelaySeconds: 30
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    name: postgresql
    ports:
    - containerPort: 5432
      name: tcp-postgresql
      protocol: TCP
    readinessProbe:
      exec:
        command:
        - /bin/sh
        - -c
        - -e
        - |
          exec pg_isready -U "cast" -d "dbname=cast" -h 127.0.0.1 -p 5432
          [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
      failureThreshold: 6
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    resources:
      limits:
        cpu: 500m
        memory: 2Gi
      requests:
        cpu: 250m
        memory: 1Gi
    securityContext:
      capabilities:
        drop:
        - ALL
      runAsUser: 1001
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /docker-entrypoint-initdb.d/
      name: custom-init-scripts
    - mountPath: /bitnami/postgresql/conf/conf.d/
      name: postgresql-extended-config
    - mountPath: /dev/shm
      name: dshm
    - mountPath: /bitnami/postgresql
      name: data
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-6bfpc
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostname: cast-postgresql-0
  nodeName: docker-desktop
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1001
  serviceAccount: default
  serviceAccountName: default
  subdomain: cast-postgresql-hl
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: data
    persistentVolumeClaim:
      claimName: data-cast-postgresql-0
  - configMap:
      defaultMode: 420
      name: cast-postgresql-extended-configuration
    name: postgresql-extended-config
  - configMap:
      defaultMode: 420
      name: cast-db-init
    name: custom-init-scripts
  - emptyDir:
      medium: Memory
    name: dshm
  - name: kube-api-access-6bfpc
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2023-03-15T18:44:07Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2023-03-15T18:44:19Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2023-03-15T18:44:19Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2023-03-15T18:44:07Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://b08e407f227c40128a05d672854cb5ae96ffc9a441d3aa1d103c5a011b19b855
    image: bitnami/postgresql:15.1.0-debian-11-r30
    imageID: docker-pullable://bitnami/postgresql@sha256:9fc57518a8b4507cd196052b1b753331917fae1e66a18dbdc0f64a0bfd2e3a6c
    lastState: {}
    name: postgresql
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2023-03-15T18:44:09Z"
  hostIP: 192.168.65.4
  phase: Running
  podIP: 10.1.2.229
  podIPs:
  - ip: 10.1.2.229
  qosClass: Burstable
  startTime: "2023-03-15T18:44:07Z"
